language: python
sudo: required
dist: xenial
python: "3.7"

before_install:
  - sudo rm -f /etc/boto.cfg

install:
  - pip install pipenv
  - pipenv install --dev

jobs:
  include:
    - stage: run tests
      install:
          - git clone --depth=1 https://github.com/antirez/redis.git && cd redis && make && cd ..
          - git clone --depth=1 https://github.com/RedisLabsModules/ReJSON.git && cd ReJSON && make && cd ..
          - pip install pipenv
          - pipenv install --dev
      before_script:
          - ./redis/src/redis-server --loadmodule ReJSON/src/rejson.so &
      script: IN_TRAVIS=true pytest tests/ --disable-pytest-warnings 
    - stage: build docker image
      script:
      - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - docker build -t dinghy-ping .
      - docker images
      - docker tag dinghy-ping $DOCKER_USERNAME/dinghy-ping:build_$TRAVIS_BUILD_NUMBER
      - docker push $DOCKER_USERNAME/dinghy-ping:build_$TRAVIS_BUILD_NUMBER
    - stage: build docker image and tag with pull request number (pr_PULL_REQUEST)
      if: branch = master
      script:
      - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - docker build -t dinghy-ping .
      - docker images
      - docker tag dinghy-ping $DOCKER_USERNAME/dinghy-ping:pr_$TRAVIS_PULL_REQUEST
      - docker push $DOCKER_USERNAME/dinghy-ping:pr_$TRAVIS_PULL_REQUEST
    - stage: build docker image latest and git tag version it
      if: tag IS present
      script:
      - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - docker build -t dinghy-ping .
      - docker images
      - docker tag dinghy-ping $DOCKER_USERNAME/dinghy-ping:$TRAVIS_TAG
      - docker push $DOCKER_USERNAME/dinghy-ping:$TRAVIS_TAG
      - docker tag dinghy-ping $DOCKER_USERNAME/dinghy-ping
      - docker push $DOCKER_USERNAME/dinghy-ping
